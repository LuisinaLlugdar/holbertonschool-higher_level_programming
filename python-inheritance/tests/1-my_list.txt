>>> print_sorted = __import__('1-my_list').MyList.print_sorted

SUCCESSFUL CASES:
    >>> MyList.print_sorted([34, 2, 76, 95])
    [2, 34, 76, 95]

    >>> MyList.print_sorted([34, -2, 76, -95])
    [-95, -2, 34, 76]

    >>> MyList.print_sorted([-34, -2, -76, -95])
    [-95, -76, -34, -2]

    >>> MyList.print_sorted([3.4, 2, 76, 9.5])
    [2, 3.4, 9.5, 76]

    >>> MyList.print_sorted([-3.4, 2, 76, -9.5])
    [-9.5, -3.4, 2, 76]

    >>> MyList.print_sorted(['A', 'v', 'w', 'T'])
    ['A', 'T', 'v', 'w']

    >>> MyList.print_sorted([True, False])
    [False, True]

    >>> MyList.print_sorted(['kiwi', 'orange', 'apple'])
    ['apple', 'kiwi', 'orange']

    >>> MyList.print_sorted(['kiwi', 'Orange', 'apple'])
    ['Orange', 'apple', 'kiwi']

    >>> MyList.print_sorted(['abcd', 'a', 'abc', 'ab'])
    ['a', 'ab', 'abc', 'abcd']

    >>> MyList.print_sorted([(23, 5), (645, 54), (6, 34)])
    [(6, 34), (23, 5), (645, 54)]

    >>> MyList.print_sorted([])
    []

    >>> MyList.print_sorted([None])
    [None]

FAILURE CASES:
    >>> MyList.print_sorted()
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() missing 1 required positional argument: 'self'

    >>> MyList.print_sorted([{(23, 5), (645, 54)}, (6, 34)])
    Traceback (most recent call last):
    ...
    TypeError: '<' not supported between instances of 'tuple' and 'set'

    >>> MyList.print_sorted([4, 1, 3, [0, 23, 2]])
    Traceback (most recent call last):
    ...
    TypeError: '<' not supported between instances of 'list' and 'int'

    >>> MyList.print_sorted(None)
    Traceback (most recent call last):
    ...
    TypeError: 'NoneType' object is not iterable

    >>> MyList.print_sorted(1, 8, 0, 32)
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() takes 1 positional argument but 4 were given
